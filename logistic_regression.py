# -*- coding: utf-8 -*-
"""Logistic_Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sQc7jde8CUaUJus05Z37Xpm1l3XIZnBo
"""

import pandas as pd #for importing dataset
import numpy as nm #for doing mathematical operations
from sklearn.linear_model import LogisticRegression
import matplotlib.pyplot as plt #for visualizing dataset

true=pd.read_excel("/content/title.xlsx")
fake=pd.read_excel("/content/text.xlsx")

print(true.head(10))

print(fake.head(10))

print(true.shape),print(fake.shape)

true["class"]=1
fake["class"]=0

dt=true.head(9)
for i in range(9,0,-1):
  true.drop([i],axis=0,inplace=True)
df=fake.head(9)
for i in range(9,0,-1):
  fake.drop([i],axis=0,inplace=True)
dm=pd.concat([df,dt],axis=0)
dm.to_excel("manual.xlsx")

from sklearn.model_selection import train_test_split as ttp
from sklearn.metrics import classification_report
data=pd.read_excel("manual.xlsx")
x=data["title"]
y=data["class"]
x_train,x_test,y_train,y_test=ttp(x,y,test_size=0.25,random_state=0)
from sklearn.feature_extraction.text import TfidfVectorizer
vector = TfidfVectorizer()
xv_train=vector.fit_transform(x_train)
xv_test=vector.transform(x_test)
#Logistic Regression:
from sklearn.linear_model import LogisticRegression
LR=LogisticRegression()
LR.fit(xv_train,y_train)
accuracy = LR.score(xv_test,y_test).round(2)
print("Accuracy is" , accuracy)
pred_LR= LR.predict(xv_test)
print(classification_report(y_test,pred_LR))

from sklearn.linear_model import LinearRegression
from sklearn.linear_model import LogisticRegression
import seaborn as sns
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
df=pd.read_csv('//content/heart.csv')
h=df.head(10)
t=df.tail(10)
print(df.shape)
for i in range(293,283,-1):
  df.drop([i],axis=0,inplace=True)
for i in range(10):
  df.drop([i],axis=0,inplace=True)
dfmt=pd.concat([h,t],axis=0)
dfmt.to_csv("test_file.csv")
data=pd.read_csv('/content/test_file.csv')
print(data)

data=data.sample(frac=1)
data.head(10)
x=data[["chol"]]
y=data["output"]
X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)
model = LinearRegression()
model.fit(X_train, y_train)
acc=model.score(X_test,y_test).round(2)
y_pred = model.predict(X_test)
print(acc,'\n',y_pred)
sns.heatmap([y_test,y_pred])

model = LogisticRegression()
model.fit(X_train, y_train)
acc=model.score(X_test,y_test).round(2)
y_pred = model.predict(X_test)
print(acc,'\n',y_pred)

from sklearn.linear_model import LogisticRegression
model = LogisticRegression()
model.fit(X_train, y_train)
acc=model.score(X_test,y_test).round(2)
y_pred = model.predict(X_test)
print(acc,'\n',y_pred)

from sklearn.metrics import confusion_matrix
cm= confusion_matrix(y_test,y_pred)
sns.heatmap(cm,annot=True)